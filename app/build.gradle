/*
 * Direct Call Widget - The widget that makes contacts accessible
 * Copyright (C) 2020 Fer P. A.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.dagger.hilt.android'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'org.jetbrains.kotlin.plugin.compose'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.blaxsoftware.directcallwidget"
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'] ?: ".")
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdk 35
    buildToolsVersion = "34.0.0"

    defaultConfig {
        applicationId "com.blaxsoftware.directcallwidget"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 33
        versionName "1.5.0-dev1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.config
        }
    }

    packaging {
        resources {
            excludes += "/META-INF/LICENSE.md"
            excludes += "/META-INF/LICENSE-notice.md"
        }
    }

    flavorDimensions += "analytics"
    productFlavors {
        create("collectionEnabled") {
            dimension = "analytics"
            resValue("bool", "collect_analytics", "true")
        }
        create("collectionDisabled") {
            dimension = "analytics"
            resValue("bool", "collect_analytics", "false")
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
        buildConfig true
        compose true
    }

    sourceSets{
        main {
            java {
                srcDirs += "src/main/kotlin"
            }
        }
        test {
            kotlin {
                srcDirs = ["src/test"]
            }
        }
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.11"
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

composeCompiler {
    reportsDestination = layout.buildDirectory.dir("compose_compiler")
}

dependencies {
    implementation project(':core:analytics')

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3"
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.7.0"
    implementation "androidx.recyclerview:recyclerview:1.3.2"
    implementation "androidx.fragment:fragment-ktx:1.6.2"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation "androidx.navigation:navigation-compose:2.8.5"
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.activity:activity-ktx:1.8.2'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation platform('com.google.firebase:firebase-bom:32.8.1')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation "com.google.firebase:firebase-config"
    implementation "androidx.glance:glance-appwidget:1.1.1"
    implementation "androidx.glance:glance-material3:1.1.1"
    implementation("androidx.glance:glance-appwidget-preview:1.1.1")
    implementation("androidx.glance:glance-preview:1.1.1")
    def composeBom = platform('androidx.compose:compose-bom:2024.04.00')
    implementation composeBom
    androidTestImplementation composeBom
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation "com.google.dagger:hilt-android:2.51.1"
    kapt "com.google.dagger:hilt-compiler:2.51.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.7.0"
    implementation "androidx.hilt:hilt-navigation-compose:1.2.0"
    implementation "io.coil-kt.coil3:coil-compose:3.0.4"
    implementation "com.google.accompanist:accompanist-permissions:0.37.0"

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    implementation "androidx.room:room-runtime:2.6.1"
    annotationProcessor "androidx.room:room-compiler:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"

    testImplementation "io.mockk:mockk-android:1.13.12"
    testImplementation 'androidx.test.ext:junit:1.2.1'
    testImplementation 'androidx.test.ext:junit-ktx:1.2.1'
    testImplementation 'org.robolectric:robolectric:4.13'
    testImplementation 'androidx.test.ext:truth:1.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.9.0'

    androidTestImplementation 'androidx.test:core:1.6.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.4.0-alpha05'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0'
    androidTestImplementation "io.mockk:mockk-android:1.13.12"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0-alpha05'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}
repositories {
    mavenCentral()
}
